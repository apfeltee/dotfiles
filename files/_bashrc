#!/bin/bash

# If not running interactively, don't do anything
[[ -z "$PS1" ]] && return

###############################
### utility env values for ####
### some programs #############
###############################
export EDITOR="kate"

###############################
####### PATH elements #########
###############################
export PATH="$PATH:$HOME/bin"
export PATH="$PATH:$HOME/opt/qemu/bin"

## clean up potential duplicates in PATH
PATH="$(echo "$PATH" | awk -v RS=':' -v ORS=":" '!a[$1]++{if (NR > 1) printf ORS; printf $a[$1]}')"

###############################
###### lessfilter #############
###############################
export LESS='-R'
export LESSOPEN='|~/.lessfilter %s'

# needed for steam
export STEAM_FRAME_FORCE_CLOSE=1

# needed so sudo'd apps can connect to x11
if [[ "$DISPLAY" ]]; then
  xhost local:root > /dev/null
fi

## LD settings
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

### ignore ^D (aka, EOF), so bash won't exit() when ^D is hit a few times
set -o ignoreeof

### get rid of "'!': event not found"
### i don't even need it!
set +H

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm*)
    color_prompt=yes
    ;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes
if [[ -n "$force_color_prompt" ]]; then
  if [[ -x /usr/bin/tput ]] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [[ "$color_prompt" == "yes" ]]; then
  # setup PS1 to be pretty
  # the current template emulates cygwin
  ps_red="\\e[0;31m"
  ps_blue="\\e[0;34m"
  ps_yellow="\\e[0;33m"
  ps_end="\\e[0m"
  PS1="\[[${ps_blue}\$(date +'%k:%M:%S')${ps_end}]\] \[\e[0;32m\e[32m\]\u@\h\e[0m [\e[0;33m\w\e[0m]\n\$ "
fi

# alias definitions
bash_aliases_file="$HOME/.bash_aliases"
if [[ -f "$bash_aliases_file" ]]; then
  source "$bash_aliases_file"
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
bash_completion_file="/etc/bash_completion"
if [[ -f "$bash_completion_file" ]] && ! shopt -oq posix; then
  if [[ -z "$BASH_COMPLETION" ]]; then
    source "$bash_completion_file"
  fi
fi

